{"version":3,"sources":["components/userMenu/UserMenu.tsx","services/languages.ts","components/tabPanel/TabPanel.tsx","app.tsx","services/oauth.ts","pages/home/Home.tsx","components/reservations/Reservations.tsx","pages/config/Config.tsx","utlis/validations/validateReservation.ts","components/createReservation/CreateReservation.tsx","index.tsx","const.ts","contexts/AlertContext.tsx","contexts/AuthContext.tsx"],"names":["MenuContainer","styled","div","UserMenu","useState","open","setOpen","anchorRef","useRef","user","useContext","AuthContext","languages","Select","labelId","id","value","locale","label","size","map","lang","MenuItem","localeFull","name","Button","ref","undefined","onClick","style","marginLeft","fontSize","username","Popper","anchorEl","current","onResize","onResizeCapture","Paper","MenuList","ListItemText","localStorage","clear","onLogout","TabPanel","props","children","index","other","role","hidden","AppWithOauth","isLoading","setIsLoading","defaultAuthContext","auth","setAuth","authService","useAuth","authEnabled","process","REACT_APP_OAUTH_ACTIVE","useEffect","isAuthenticated","getCodeFromLocation","window","location","getAuthTokens","token","logout","authorize","Provider","path","element","zIndex","color","App","defaultAlertContextValue","alert","setAlert","updateAlertContext","newChanges","oauthService","AuthService","clientId","provider","redirectUri","scopes","HomePage","theme","useTheme","React","currentTab","setCurrentTab","AlertContext","fixed","container","spacing","justifyContent","item","xs","md","variant","component","isVisible","severity","type","action","message","onChange","event","newValue","wrapped","axis","direction","onChangeIndex","dir","FieldContainer","Reservations","reservationSelected","setReservationSelected","editing","setEditing","searchValue","setSearchValue","date","setDate","startTime","setStartTime","handleSave","fetch","APIPath","method","headers","body","JSON","stringify","catch","error","handleDelete","then","handleChange","field","minute","hour","day","month","year","today","Date","getMinutes","getHours","getUTCDate","getUTCMonth","getUTCFullYear","handleSearch","result","json","response","fullWidth","currentTarget","onKeyDown","key","justifyItems","display","disabled","length","sx","m","pd","flexFlow","pt","ml","host_name","dateAdapter","AdapterDayjs","inputFormat","renderInput","params","rowSpacing","ampm","minutesStep","mr","party_size","e","target","Array","from","i","additionalFields","host_email","startIcon","pr","EmptyField","placeHolder","required","additional","saved","ConfigPage","fields","setFields","APIConfigPath","config","handleSaveConfigField","saveField","fieldsArray","splice","modifyField","fieldName","minWidth","align","border","handleEditFields","filter","colSpan","emailValidation","validateReservation","reservation","errors","trim","test","TODAY","MINUTE","HOUR","setHours","setMinutes","emptyNewReservation","ButtonContainer","CreateReservation","newReservation","setNewReservation","setErrors","isSubmitted","setIsSubmitted","setAdditionalFields","additionalFieldsArr","addtionalF","forEach","newField","push","handleChangeInput","isReservationValid","Object","values","addReservation","getAdditionalFieldValue","additionalField","find","f","Grid","LocalizationProvider","DesktopDatePicker","TextField","TimePicker","FormControl","InputLabel","Diversity3","helperText","handleChangeAdditionalFields","lg","ReactDOM","StrictMode","document","getElementById","createContext"],"mappings":"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","file":"static/js/main.4f896730.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n  Paper,\n  MenuList,\n  MenuItem,\n  ListItemText,\n  Button,\n  Popper,\n  Select,\n} from \"@mui/material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport styled from \"@emotion/styled\";\nimport { getLanguagesList } from \"../../services/languages\";\n\nconst MenuContainer = styled.div`\n  float: right;\n`;\n\nconst UserMenu = () => {\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef<HTMLButtonElement>(null);\n  const user = useContext(AuthContext);\n\n  const languages = getLanguagesList()\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const handleLogout = () => {\n    localStorage.clear()\n    user.onLogout();\n  };\n\n  return (\n    <MenuContainer>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={user.locale}\n        label=\"Language\"\n        size=\"small\"\n      >\n        {languages.map(lang => {\n          return <MenuItem value={lang.localeFull}>{lang.name}</MenuItem>\n        }\n\n        )}\n      </Select>\n      <Button\n        ref={anchorRef}\n        id=\"composition-button\"\n        aria-controls={open ? \"composition-menu\" : undefined}\n        aria-expanded={open ? \"true\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n        style={{ marginLeft: \"1rem\" }}\n      >\n        <PersonIcon fontSize=\"small\" />\n        {user.username}\n      </Button>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        onResize={undefined}\n        onResizeCapture={undefined}\n      >\n        <Paper>\n          <MenuList>\n            <MenuItem>\n              <ListItemText onClick={handleLogout}>Logout</ListItemText>\n            </MenuItem>\n          </MenuList>\n        </Paper>\n      </Popper>\n    </MenuContainer>\n  );\n};\n\nexport default UserMenu;\n","// export const getLanguages = async (token) => {\n//   const response = await fetch(`${APIPath}`, {\n//     method: \"post\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       headers: { Authorization: token },\n//     },\n//   });\n//   const result = await response.json();\n//   console.log(\"__\", result);\n// };\n\nexport interface LangI{\n  id: string;\n  name: string;\n  localName: string;\n  locale: string;\n  localeFull: string;\n  isRtl: boolean;\n}\n\nexport const getLanguagesList = () => {\n  return [{ \"id\": 13, \"name\": \"Arabic\", \"localName\": \"العربية\", \"locale\": \"AR\", \"localeFull\": \"ar-AE\", \"isRtl\": true }, { \"id\": 3, \"name\": \"German\", \"localName\": \"Deutsch\", \"locale\": \"DE\", \"localeFull\": \"de-DE\", \"localeMoment\": \"de\", \"isRtl\": false }, { \"id\": 2, \"name\": \"English\", \"localName\": \"English\", \"locale\": \"en\", \"localeFull\": \"en-US\", \"isRtl\": false }, { \"id\": 41, \"name\": \"Spanish (Latin America)\", \"localName\": \"Español\", \"locale\": \"es\", \"localeFull\": \"es-LA\", \"localeMoment\": \"es\", \"isRtl\": false }, { \"id\": 7, \"name\": \"French\", \"localName\": \"Français\", \"locale\": \"FR\", \"localeFull\": \"fr-FR\", \"localeMoment\": \"fr\", \"isRtl\": false }, { \"id\": 17, \"name\": \"Italian\", \"localName\": \"Italiano\", \"locale\": \"IT\", \"localeFull\": \"it-IT\", \"localeMoment\": \"it\", \"isRtl\": false }, { \"id\": 44, \"name\": \"Japanese\", \"localName\": \"日本語\", \"locale\": \"JA\", \"localeFull\": \"ja-JP\", \"localeMoment\": \"ja\", \"isRtl\": false }, { \"id\": 43, \"name\": \"Korean\", \"localName\": \"한국어\", \"locale\": \"KO\", \"localeFull\": \"ko-KR\", \"localeMoment\": \"ko\", \"isRtl\": false }, { \"id\": 21, \"name\": \"Portuguese (Brasil)\", \"localName\": \"Português\", \"locale\": \"PT\", \"localeFull\": \"pt-BR\", \"localeMoment\": \"pt-br\", \"isRtl\": false }, { \"id\": 9, \"name\": \"Russian\", \"localName\": \"Русский\", \"locale\": \"RU\", \"localeFull\": \"ru-RU\", \"localeMoment\": \"ru\", \"isRtl\": false }, { \"id\": 25, \"name\": \"Swedish\", \"localName\": \"Svenska\", \"locale\": \"SV\", \"localeFull\": \"sv-SE\", \"localeMoment\": \"sv\", \"isRtl\": false }, { \"id\": 16, \"name\": \"Turkish\", \"localName\": \"Türkçe\", \"locale\": \"TR\", \"localeFull\": \"tr-TR\", \"localeMoment\": \"tr\", \"isRtl\": false }, { \"id\": 35, \"name\": \"Chinese (Simplified)\", \"localName\": \"简体中文\", \"locale\": \"zh\", \"localeFull\": \"zh-Hans\", \"localeMoment\": \"zh-cn\", \"isRtl\": false }, { \"id\": 34, \"name\": \"Chinese (Traditional)\", \"localName\": \"繁體中文\", \"locale\": \"zh\", \"localeFull\": \"zh-TW\", \"localeMoment\": \"zh-tw\", \"isRtl\": false }]\n}","import { TabPanelProps } from \"../../pages/home/Home.types\";\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <div>{children}</div>}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import React, { useEffect, useState } from \"react\";\nimport oauthService from \"./services/oauth\";\nimport { useAuth, AuthProvider } from \"react-oauth2-pkce\";\nimport {\n  AlertContext,\n  defaultAlertContextValue,\n} from \"./contexts/AlertContext\";\nimport { Backdrop, CircularProgress } from \"@mui/material\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { AlertI, AuthI } from \"./pages/home/Home.types\";\nimport HomePage from \"./pages/home/Home\";\nimport ConfigPage from \"./pages/config/Config\";\nimport { AuthContext, defaultAuthContext } from \"./contexts/AuthContext\";\n\nconst AppWithOauth: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [auth, setAuth] = useState<AuthI>(defaultAuthContext);\n  const { authService } = useAuth();\n  const authEnabled = process?.env.REACT_APP_OAUTH_ACTIVE;\n\n  useEffect(() => {\n    if (!authEnabled) {\n      return;\n    }\n    if (\n      !authService.isAuthenticated() &&\n      !authService.getCodeFromLocation(window.location)\n    ) {\n      setIsLoading(true);\n      authService.authorize();\n    } else {\n      const { token, username, locale } =\n        authService.getAuthTokens() as unknown as AuthI;\n      setAuth({\n        token,\n        username,\n        locale,\n        onLogout: () => {\n          // localStorage.clear();\n          authService.logout();\n        },\n      });\n      setIsLoading(false);\n    }\n  }, [authService, authEnabled]);\n\n  return (\n    <>\n      {(!authEnabled || authService.isAuthenticated()) && (\n        <AuthContext.Provider value={auth}>\n          <BrowserRouter>\n            <Routes>\n              <Route path=\"/\">\n                <Route index element={<HomePage />} />\n                <Route path=\"config\" element={<ConfigPage />} />\n              </Route>\n            </Routes>\n          </BrowserRouter>\n        </AuthContext.Provider>\n      )}\n      {isLoading && (\n        <Backdrop open={true} style={{ zIndex: 1 }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nconst App: React.FC = () => {\n  const [alert, setAlert] = useState<AlertI>(defaultAlertContextValue);\n\n  const updateAlertContext = (newChanges: AlertI) => {\n    setAlert({ ...alert, ...newChanges });\n  };\n\n  return (\n    <AlertContext.Provider value={{ ...alert, updateAlertContext }}>\n      <AuthProvider authService={oauthService}>\n        <AppWithOauth />\n      </AuthProvider>\n    </AlertContext.Provider>\n  );\n};\n\nexport default App;\n","//SETTING UP OAUTH SERVICE WITH OUR APP\n\nimport { AuthService } from \"react-oauth2-pkce\";\n\nconst oauthService = new AuthService({\n  clientId: process.env.REACT_APP_CLIENT_ID || \"\",\n  provider: process.env.REACT_APP_PROVIDER || \"\",\n  redirectUri: process.env.REACT_APP_REDIRECT_URI || \"\",\n  scopes: [\"conversations\"],\n  location: window.location,\n});\n\nexport default oauthService;\n","import React, { useContext } from \"react\";\nimport Reservations from \"../../components/reservations/Reservations\";\nimport {\n  Alert,\n  Tab,\n  Tabs,\n  Container,\n  useTheme,\n  IconButton,\n  Typography,\n  Backdrop,\n  Grid,\n} from \"@mui/material\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport CreateReservation from \"../../components/createReservation/CreateReservation\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CircularProgress } from \"@mui/material\";\nimport TabPanel from \"../../components/tabPanel/TabPanel\";\nimport { AlertContext } from \"../../contexts/AlertContext\";\nimport UserMenu from \"../../components/userMenu/UserMenu\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nconst HomePage: React.FC = () => {\n  const theme = useTheme();\n  const [currentTab, setCurrentTab] = React.useState(0);\n  const authEnabled = process?.env.REACT_APP_OAUTH_ACTIVE;\n  const user = useContext(AuthContext)\n  const alert = useContext(AlertContext);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setCurrentTab(index);\n  };\n\n  \n  return (\n    <Container fixed>\n      <Grid container spacing={2} justifyContent=\"center\">\n        <br />\n        <Grid item xs={11} md={10}>\n          <Typography variant=\"h4\" component=\"h4\">\n            Awesome Restaurant\n            {authEnabled && user?.username && <UserMenu />}\n          </Typography>\n        </Grid>\n\n        <br />\n        <Grid item xs={12} md={10}>\n          <Backdrop open={!!alert.isLoading} style={{ zIndex: 1 }}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          {alert.isVisible && (\n            <>\n              <Alert\n                severity={alert.type}\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      alert.updateAlertContext({ isVisible: false });\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n              >\n                {alert.message}\n              </Alert>\n              <br />\n            </>\n          )}\n\n          <Tabs\n            value={currentTab}\n            onChange={handleChange}\n            aria-label=\"Reservations\"\n          >\n            <Tab value={0} label=\"Manage reservations\" wrapped />\n            <Tab value={1} label=\"Create Reservation\" />\n          </Tabs>\n\n          <SwipeableViews\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n            index={currentTab}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabPanel value={currentTab} index={0} dir={theme.direction}>\n              <br />\n              <Reservations />\n            </TabPanel>\n\n            <TabPanel value={currentTab} index={1} dir={theme.direction}>\n              <CreateReservation />\n            </TabPanel>\n          </SwipeableViews>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import * as React from \"react\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport { ReservationI } from \"../../pages/home/Home.types\";\nimport { useContext, useState } from \"react\";\nimport { APIPath } from \"../../const\";\n\nimport styled from \"@emotion/styled\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport {\n  CalendarMonth,\n  Dining,\n  Diversity3,\n  Groups2,\n  LocalDining,\n  QueryBuilder,\n} from \"@mui/icons-material\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DesktopDatePicker, TimePicker } from \"@mui/x-date-pickers\";\nimport { AlertContext } from \"../../contexts/AlertContext\";\n\nconst FieldContainer = styled.div`\n  & > div {\n    width: 100%;\n  }\n`;\n\nconst Reservations = () => {\n  const [reservationSelected, setReservationSelected] = useState<\n    ReservationI | undefined\n  >();\n  const [editing, setEditing] = useState<boolean>(false);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [date, setDate] = useState<Date | null>();\n  const [startTime, setStartTime] = useState<Date | null>();\n  const alert = useContext(AlertContext);\n\n  const handleOpenEdit = () => {\n    setEditing(true);\n  };\n\n  const handleSave = async () => {\n    if (reservationSelected) {\n      await fetch(`${APIPath}/${reservationSelected.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        body: JSON.stringify(reservationSelected),\n      }).catch((error) => {\n        alert.updateAlertContext({\n          type: \"error\",\n          message: error,\n          isVisible: true,\n          isLoading: false,\n        });\n      });\n      alert.updateAlertContext({\n        type: \"success\",\n        message: \"Your reservation has been updated succesfully!\",\n        isVisible: true,\n        isLoading: false,\n      });\n      setEditing(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (reservationSelected) {\n      setEditing(false);\n      await fetch(`${APIPath}/${reservationSelected.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        body: JSON.stringify(reservationSelected),\n      }).then(() => {\n        alert.updateAlertContext({\n          type: \"success\",\n          message: \"Your reservation has been deleted succesfully!\",\n          isVisible: true,\n          isLoading: false,\n        });\n        setEditing(false);\n        setSearchValue(\"\");\n        setReservationSelected(undefined);\n      });\n    }\n  };\n\n  const handleCloseEdit = () => {\n    setEditing(false);\n    (async () => {\n      const result = await fetch(\n        `${APIPath}/${reservationSelected?.host_email}`\n      );\n      const response = await result.json();\n      if (response && response.id) {\n        setReservationSelected(response);\n        setDate(new Date(response.date ? response.date : \"\"));\n        setStartTime(\n          new Date(response.hour ? `${response.date} ${response.hour}` : \"\")\n        );\n      }\n    })();\n  };\n\n  const handleChangeInput = (\n    e:\n      | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      | SelectChangeEvent\n  ) => {\n    setReservationSelected({\n      ...reservationSelected,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleChange = (newValue: Date | null | undefined, field: string) => {\n    let today = new Date(newValue ? newValue : \"\");\n    let value, minute, hour, day, month, year;\n    minute = today.getMinutes();\n    hour = today.getHours();\n    day = today.getUTCDate();\n    month = today.getUTCMonth() + 1;\n    year = today.getUTCFullYear();\n    switch (field) {\n      case \"date\":\n        if (newValue) {\n          value = `${month}/${day}/${year}`;\n          setDate(newValue);\n        }\n        break;\n      case \"hour\":\n        value = `${hour}:${minute && minute < 10 ? `0${minute}` : minute}`;\n        setStartTime(newValue);\n        break;\n    }\n    setReservationSelected({ ...reservationSelected, [field]: value });\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.currentTarget.value);\n  };\n\n  const handleSearch = () => {\n    (async () => {\n      const result = await fetch(`${APIPath}/${searchValue}`);\n      const response = await result.json();\n\n      if (response && response.id) {\n        setReservationSelected(response);\n        setDate(new Date(response.date ? response.date : \"\"));\n        setStartTime(\n          new Date(response.hour ? `${response.date} ${response.hour}` : \"\")\n        );\n        alert.updateAlertContext({\n          isVisible: true,\n          type: \"success\",\n          isLoading: false,\n          message: \"\",\n        });\n      } else {\n        setReservationSelected(undefined);\n        alert.updateAlertContext({\n          type: \"error\",\n          message: response.error,\n          isVisible: true,\n          isLoading: false,\n        });\n      }\n    })();\n  };\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={10} md={11}>\n          <TextField\n            fullWidth\n            type=\"search\"\n            onChange={handleInputChange}\n            label=\"Enter your email\"\n            onKeyDown={handleKeyDown}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={2}\n          md={1}\n          justifyContent=\"center\"\n          justifyItems=\"center\"\n          display=\"flex\"\n        >\n          <Button disabled={!searchValue.length} onClick={handleSearch}>\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n      <br />\n      {reservationSelected && (\n        <Card variant=\"outlined\">\n          <Box sx={{ m: 2, pd: 2 }}>\n            <CardContent>\n              <Restaurant />\n              <Box sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                <Typography sx={{ fontSize: 20 }} variant=\"h5\">\n                  Reservation to:\n                </Typography>\n                <Typography sx={{ fontSize: 20, ml: 1 }} color=\"text.secondary\">\n                  {reservationSelected.host_name}\n                </Typography>\n              </Box>\n              <Box sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                {editing ? (\n                  <>\n                    <Grid item xs={6} md={6}>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <FieldContainer>\n                          <DesktopDatePicker\n                            data-test-id=\"date\"\n                            label=\"Date\"\n                            inputFormat=\"MM/DD/YYYY\"\n                            value={date}\n                            onChange={(value) => handleChange(value, \"date\")}\n                            renderInput={(params) => <TextField {...params} />}\n                          />\n                        </FieldContainer>\n                      </LocalizationProvider>\n                    </Grid>\n\n                    <Grid item xs={6} md={6}>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <Grid container spacing={2} rowSpacing=\"1rem\">\n                          <Grid item xs={12}>\n                            <FieldContainer>\n                              <TimePicker\n                                data-test-id=\"hour\"\n                                ampm={false}\n                                label=\"Hour\"\n                                value={startTime}\n                                onChange={(value) =>\n                                  handleChange(value, \"hour\")\n                                }\n                                renderInput={(params) => (\n                                  <TextField {...params} />\n                                )}\n                                minutesStep={30}\n                              />\n                            </FieldContainer>\n                          </Grid>\n                        </Grid>\n                      </LocalizationProvider>\n                    </Grid>\n                  </>\n                ) : (\n                  <>\n                    <Typography sx={{ fontSize: 20, mr: 1 }} variant=\"h5\">\n                      <CalendarMonth />\n                    </Typography>\n                    <Typography sx={{ fontSize: 20 }} color=\"text.secondary\">\n                      {reservationSelected.date}\n                    </Typography>\n                    <Typography sx={{ fontSize: 20, ml: 3 }} variant=\"h5\">\n                      <QueryBuilder />\n                    </Typography>\n                    <Typography\n                      sx={{ fontSize: 20, ml: 1 }}\n                      color=\"text.secondary\"\n                    >\n                      {reservationSelected.hour}\n                    </Typography>\n                  </>\n                )}\n              </Box>\n              <Box sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                {editing ? (\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      <Diversity3 />\n                    </InputLabel>\n                    <Select\n                      name=\"party_size\"\n                      value={reservationSelected.party_size}\n                      label=\"size\"\n                      onChange={handleChangeInput}\n                    >\n                      {Array.from(Array(22), (e, i) => {\n                        return (\n                          i > 0 && (\n                            <MenuItem key={i} value={i}>{`${i < 21 ? i : \" \"} ${\n                              i === 1\n                                ? \"person\"\n                                : i < 21\n                                ? \"people\"\n                                : \"Larger party\"\n                            }`}</MenuItem>\n                          )\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                ) : (\n                  <>\n                    <Typography sx={{ fontSize: 20, pt: 0.3 }} variant=\"h5\">\n                      <Groups2 />\n                    </Typography>\n                    <Typography\n                      sx={{ fontSize: 20, ml: 1 }}\n                      color=\"text.secondary\"\n                    >\n                      {reservationSelected.party_size}\n                    </Typography>\n                  </>\n                )}\n              </Box>\n                {reservationSelected.additionalFields && reservationSelected.additionalFields.map(field => <Box key={field.name} sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                  <Typography sx={{ fontSize: 20 }} variant=\"h5\">\n                    {field.name}:\n                  </Typography>\n                  <Typography sx={{ fontSize: 20, ml: 1 }} color=\"text.secondary\">\n                    {field.value}\n                  </Typography>\n                    </Box>\n                )}\n            </CardContent>\n            <CardActions sx={{ display: \"flex\", flexFlow: \"row-reverse\" }}>\n              <Button\n                size=\"small\"\n                onClick={editing ? handleCloseEdit : handleDelete}\n                startIcon={<LocalDining />}\n              >\n                {editing ? \"Cancel\" : \"Delete\"}\n              </Button>\n              <Button\n                size=\"small\"\n                sx={{ pr: 5 }}\n                onClick={editing ? handleSave : handleOpenEdit}\n                startIcon={<Dining />}\n              >\n                {editing ? \"Save\" : \"Edit\"}\n              </Button>\n            </CardActions>\n          </Box>\n        </Card>\n      )}\n    </>\n  );\n};\nexport default Reservations;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { FieldI } from \"./ConfigTypes\";\nimport {\n  Container,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { APIConfigPath } from \"../../const\";\nimport UserMenu from \"../../components/userMenu/UserMenu\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nconst EmptyField = {\n  name: \"\",\n  placeHolder: \"\",\n  disabled: \"false\",\n  required: \"false\",\n  additional: \"true\",\n  saved: \"true\",\n};\n\nconst ConfigPage: React.FC = () => {\n  const authEnabled = process?.env.REACT_APP_OAUTH_ACTIVE;\n  const user = useContext(AuthContext);\n  const [fields, setFields] = useState<FieldI[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(`${APIConfigPath}`, {});\n      const result = await response.json();\n      result.config && setFields(result.config.fields);\n    })();\n  }, []);\n\n  const handleSaveConfigField = async (field: FieldI, index: number) => {\n    const saveField = { ...field, disabled: \"true\" };\n    const fieldsArray = [...fields];\n    fieldsArray.splice(index, 1, saveField);\n    setFields(fieldsArray);\n    await fetch(`${APIConfigPath}`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(fieldsArray),\n    });\n  };\n\n  const handleAddField = () => {\n    setFields([...fields, EmptyField]);\n  };\n\n  const handleDeleteField = (fieldName: FieldI) => async () => {\n    await fetch(`${APIConfigPath}/additionalFields`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(fieldName),\n    });\n    const fieldsArray = [...fields];\n    setFields(fieldsArray.filter((e) => e.name !== fieldName.name));\n  };\n\n  const modifyField = (\n    field: FieldI,\n    fieldName: string,\n    value: string,\n    index: number\n  ) => {\n    const fieldsArray = [...fields];\n    fieldsArray.splice(index, 1, { ...field, [fieldName]: value });\n    setFields(fieldsArray);\n  };\n\n  const handleEditFields = (field: FieldI, index: number) => {\n    const fieldsArray = [...fields];\n    fieldsArray.splice(index, 1, { ...field, disabled: \"false\" });\n    setFields(fieldsArray);\n  };\n\n  return (\n    <Container fixed>\n      <Grid container spacing={2} justifyContent=\"center\">\n        <br />\n        <Grid item xs={12} md={10}>\n          <Typography variant=\"h4\" component=\"h4\">\n            Configuration Page\n            {authEnabled && user?.username && <UserMenu />}\n          </Typography>\n          <br />\n          <TableContainer component={Paper}>\n            <Table\n              sx={{ minWidth: 650 }}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell align=\"right\">Place Holder</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {fields.map((field, index) => (\n                  <TableRow\n                    key={index}\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                  >\n                    <TableCell align=\"right\">\n                      <TextField\n                        fullWidth\n                        disabled={field.disabled === \"true\"}\n                        onChange={(e) =>\n                          modifyField(field, \"name\", e.target.value, index)\n                        }\n                        value={field.name}\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <TextField\n                        fullWidth\n                        disabled={field.disabled === \"true\"}\n                        onChange={(e) =>\n                          modifyField(\n                            field,\n                            \"placeHolder\",\n                            e.target.value,\n                            index\n                          )\n                        }\n                        value={field.placeHolder}\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <SaveIcon\n                        onClick={() => handleSaveConfigField(field, index)}\n                        color={\n                          (field.saved === \"false\" &&\n                            field.disabled === \"true\") ||\n                          (field.saved === \"true\" && field.disabled === \"true\")\n                            ? \"disabled\"\n                            : \"primary\"\n                        }\n                      />\n                      <EditIcon\n                        onClick={() => handleEditFields(field, index)}\n                        color={\n                          field.saved === \"true\" ? \"secondary\" : \"disabled\"\n                        }\n                      />\n                      <DeleteIcon\n                        onClick={handleDeleteField(field)}\n                        color={\n                          field.saved === \"false\" && field.disabled === \"true\"\n                            ? \"disabled\"\n                            : \"error\"\n                        }\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"}>\n                    <AddCircleOutlineIcon\n                      onClick={handleAddField}\n                      color=\"primary\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ConfigPage;\n","import { ErrorI, ReservationI } from \"../../pages/home/Home.types\";\n\nconst emailValidation =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const validateReservation = (reservation: ReservationI): ErrorI => {\n  const errors: ErrorI = {};\n  if (!reservation.host_name?.trim()) {\n    errors.host_name = \"Please enter a host name\";\n  }\n  if (!reservation.host_email?.trim()) {\n    errors.host_email = \"Please enter an email\";\n  } else {\n    if (!emailValidation.test(reservation.host_email)) {\n      errors.host_email = \"Please enter a valid email\";\n    }\n  }\n  return errors;\n};\n","import * as React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { ErrorI, ReservationI } from \"../../pages/home/Home.types\";\nimport {APIConfigPath, APIPath} from \"../../const\";\nimport { Grid } from \"@mui/material\";\nimport styled from \"@emotion/styled\";\n\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DesktopDatePicker, TimePicker } from \"@mui/x-date-pickers\";\nimport { Diversity3 } from \"@mui/icons-material\";\nimport { validateReservation } from \"../../utlis/validations/validateReservation\";\nimport { AlertContext } from \"../../contexts/AlertContext\";\nimport {FieldI} from \"../../pages/config/ConfigTypes\";\nimport {Field} from \"./CreateReservationTypes\";\n\nconst TODAY = new Date();\nlet MINUTE = TODAY.getMinutes();\nlet HOUR = TODAY.getHours();\nconst setTime = () => {\n  if (MINUTE > 30) {\n    MINUTE = 30;\n  } else {\n    MINUTE = 0;\n    HOUR += 1;\n  }\n  TODAY.setHours(HOUR);\n  TODAY.setMinutes(MINUTE);\n};\nsetTime();\nconst emptyNewReservation = {\n  host_email: \"\",\n  host_name: \"\",\n  hour: `${HOUR}:${MINUTE < 10 ? `0${MINUTE}` : MINUTE}`,\n  date: `${\n    TODAY.getUTCMonth() + 1\n  }/${TODAY.getUTCDate()}/${TODAY.getUTCFullYear()}`,\n  party_size: \"2\",\n  additionalFields: [],\n};\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  & > button {\n    width: 100%;\n  }\n`;\n\nconst FieldContainer = styled.div`\n  & > div {\n    width: 100%;\n  }\n`;\n\nconst CreateReservation = () => {\n  const [newReservation, setNewReservation] =\n    useState<ReservationI>(emptyNewReservation);\n  const [errors, setErrors] = useState<ErrorI>({});\n  const [date, setDate] = useState<Date | null>(new Date());\n  const [startTime, setStartTime] = useState<Date | null>(TODAY);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [additionalFields, setAdditionalFields] = useState<FieldI[]>([]);\n  const { updateAlertContext, isLoading } = React.useContext(AlertContext);\n\n  useEffect(()=> {\n    (async () => {\n      const response = await fetch(`${APIConfigPath}/additionalFields`, {});\n      const result = await response.json();\n      let additionalFieldsArr:Field[] = [];\n      const addtionalF:FieldI[] = result.config.length ? result.config : [];\n      setAdditionalFields(result.config);\n      addtionalF.forEach(field => {\n        const newField = {name: field.name, value: ''}\n        additionalFieldsArr.push(newField);\n      })\n      setNewReservation({...newReservation, additionalFields: [...additionalFieldsArr] });\n    })();\n  },[newReservation]);\n\n  const handleChange = (newValue: Date | null, field: string) => {\n    let today = new Date(newValue ? newValue : \"\");\n    let value, minute, hour, day, month, year;\n    minute = today.getMinutes();\n    hour = today.getHours();\n    day = today.getUTCDate();\n    month = today.getUTCMonth() + 1;\n    year = today.getUTCFullYear();\n    switch (field) {\n      case \"date\":\n        if (newValue) {\n          value = `${month}/${day}/${year}`;\n          setDate(newValue);\n        }\n        break;\n      case \"hour\":\n        value = `${hour}:${minute < 10 ? `0${minute}` : minute}`;\n        setStartTime(newValue);\n        break;\n    }\n    setNewReservation({ ...newReservation, [field]: value });\n  };\n\n  const handleChangeInput = (\n    e:\n      | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      | SelectChangeEvent\n  ) => {\n    setNewReservation({ ...newReservation, [e.target.name]: e.target.value });\n    const errors = validateReservation(newReservation);\n    if (isReservationValid(errors)) {\n      updateAlertContext({\n        isVisible: false,\n        message: \"\",\n        isLoading: false,\n        type: \"success\",\n      });\n    }\n    setErrors(errors);\n  };\n\n  const handleChangeAdditionalFields = (fieldName:string,value:string, index:number)=>{\n    const additionalField:Field = {name: fieldName, value: value};\n    let additionalFieldsArr:Field[];\n    if (newReservation.additionalFields){\n      additionalFieldsArr = [...newReservation.additionalFields]\n    }else{\n      additionalFieldsArr = []\n    }\n    additionalFieldsArr[index] = additionalField;\n    setNewReservation({...newReservation, additionalFields: [...additionalFieldsArr]});\n  }\n\n  const isReservationValid = (errors: ErrorI) => {\n    return !Object.values(errors).length;\n  };\n\n  const addReservation = async () => {\n    const errors = validateReservation(newReservation);\n    setIsSubmitted(true);\n    setErrors({ ...errors });\n\n    if (isReservationValid(errors)) {\n      updateAlertContext({ isLoading: true });\n      const response = (await fetch(`${APIPath}`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newReservation),\n      })) as any;\n      const result = await response.json();\n      if (result[\"id\"]) {\n        updateAlertContext({\n          type: \"success\",\n          message: \"Your reservation successfully created!\",\n          isVisible: true,\n          isLoading: false,\n        });\n        setNewReservation({ ...emptyNewReservation });\n      } else {\n        updateAlertContext({\n          message: result[\"error\"],\n          type: \"error\",\n          isVisible: true,\n          isLoading: false,\n        });\n      }\n    } else {\n      updateAlertContext({\n        type: \"error\",\n        message: \"Please fill required fields\",\n        isVisible: true,\n        isLoading: false,\n      });\n    }\n  };\n\n  const getAdditionalFieldValue = (fieldName:string) => {\n    let value = ''\n    if (newReservation.additionalFields) {\n      const additionalField = newReservation.additionalFields.find((f) => f.name === fieldName);\n      if (additionalField){\n        value = additionalField.value;\n      }\n    }\n    return value;\n  }\n\n  return (\n    <>\n      <br />\n      <Grid container spacing={2} rowSpacing=\"1rem\">\n        <Grid item xs={6} md={6}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <FieldContainer>\n              <DesktopDatePicker\n                data-test-id=\"date\"\n                label=\"Date\"\n                inputFormat=\"MM/DD/YYYY\"\n                value={date}\n                onChange={(value) => handleChange(value, \"date\")}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </FieldContainer>\n          </LocalizationProvider>\n        </Grid>\n\n        <Grid item xs={6} md={6}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <Grid container spacing={2} rowSpacing=\"1rem\">\n              <Grid item xs={12}>\n                <FieldContainer>\n                  <TimePicker\n                    data-test-id=\"hour\"\n                    ampm={false}\n                    label=\"Hour\"\n                    value={startTime}\n                    onChange={(value) => handleChange(value, \"hour\")}\n                    renderInput={(params) => <TextField {...params} />}\n                    minutesStep={30}\n                  />\n                </FieldContainer>\n              </Grid>\n            </Grid>\n          </LocalizationProvider>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">\n              <Diversity3 />\n            </InputLabel>\n            <Select\n              name=\"party_size\"\n              value={newReservation.party_size}\n              label=\"size\"\n              onChange={handleChangeInput}\n            >\n              {Array.from(Array(22), (e, i) => {\n                return (\n                  i > 0 && (\n                    <MenuItem key={i} value={i}>{`${i < 21 ? i : \" \"} ${\n                      i === 1 ? \"person\" : i < 21 ? \"people\" : \"Larger party\"\n                    }`}</MenuItem>\n                  )\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            error={!!errors.host_name && isSubmitted}\n            name=\"host_name\"\n            label=\"Host Name\"\n            value={newReservation.host_name}\n            onChange={handleChangeInput}\n            helperText={isSubmitted ? errors.host_name : \"\"}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            error={!!errors.host_email && isSubmitted}\n            name=\"host_email\"\n            label=\"Host Email\"\n            value={newReservation.host_email}\n            onChange={handleChangeInput}\n            helperText={isSubmitted ? errors.host_email : \"\"}\n          />\n        </Grid>\n        {additionalFields && additionalFields.map((additionalField, index) =>\n            <Grid key={index} item xs={12}>\n            <TextField\n                fullWidth\n                key={additionalField.name}\n                error={false}\n                name={additionalField.name}\n                label={additionalField.placeHolder}\n                value={getAdditionalFieldValue(additionalField.name)}\n                onChange={e => handleChangeAdditionalFields(additionalField.name,e.target.value,index)}\n            />\n          </Grid>\n        )}\n        <Grid item xs={12} md={12} lg={12}>\n          <ButtonContainer>\n            <Button\n              size={\"large\"}\n              onClick={addReservation}\n              variant=\"contained\"\n              disabled={\n                isLoading || (isSubmitted && !isReservationValid(errors))\n              }\n            >\n              Create\n            </Button>\n          </ButtonContainer>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateReservation;\n","import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const APIPath = \"exchange/restaurant/reservations\";\nexport const APIConfigPath = \"exchange/restaurant/config\";\n","import React from \"react\";\nimport { AlertI } from \"../pages/home/Home.types\";\n\nexport const defaultAlertContextValue: AlertI = {\n  isLoading: false,\n  isVisible: false,\n  type: \"success\",\n  message: \"Reservation successfully updated\",\n};\n\nexport const AlertContext = React.createContext<any>({\n  ...defaultAlertContextValue,\n});\n","import React from \"react\";\nimport { AuthI } from \"../pages/home/Home.types\";\n\nexport const defaultAuthContext: AuthI = {\n  token: '',\n  locale: '',\n  username: '',\n  onLogout: () => {}\n};\n\nexport const AuthContext = React.createContext<any>({\n  ...defaultAuthContext,\n});\n"],"sourceRoot":""}