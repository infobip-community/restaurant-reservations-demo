{"version":3,"sources":["components/userMenu/UserMenu.tsx","services/languages.ts","components/tabPanel/TabPanel.tsx","app.tsx","services/oauth.ts","pages/home/Home.tsx","components/reservations/Reservations.tsx","pages/config/Config.tsx","utlis/validations/validateReservation.ts","components/createReservation/CreateReservation.tsx","index.tsx","const.ts","contexts/AlertContext.tsx","contexts/AuthContext.tsx"],"names":["MenuContainer","styled","div","LanguageLabel","label","UserMenu","useState","open","setOpen","anchorRef","useRef","user","useContext","AuthContext","languages","find","language","localeFull","locale","name","Button","ref","id","undefined","onClick","style","marginLeft","fontSize","username","Popper","anchorEl","current","onResize","onResizeCapture","Paper","MenuList","MenuItem","ListItemText","onLogout","TabPanel","props","children","value","index","other","role","hidden","AppWithOauth","isLoading","setIsLoading","defaultAuthContext","auth","setAuth","authService","useAuth","authEnabled","process","useEffect","isAuthenticated","getCodeFromLocation","window","location","getAuthTokens","token","localStorage","clear","logout","authorize","Provider","path","element","zIndex","color","App","defaultAlertContextValue","alert","setAlert","updateAlertContext","newChanges","oauthService","AuthService","clientId","provider","redirectUri","scopes","HomePage","theme","useTheme","React","currentTab","setCurrentTab","AlertContext","fixed","container","spacing","justifyContent","item","xs","md","variant","component","isVisible","severity","type","action","size","message","onChange","event","newValue","wrapped","axis","direction","onChangeIndex","dir","FieldContainer","Reservations","reservationSelected","setReservationSelected","editing","setEditing","searchValue","setSearchValue","date","setDate","startTime","setStartTime","handleSave","fetch","APIPath","method","headers","body","JSON","stringify","catch","error","handleDelete","then","handleChange","field","minute","hour","day","month","year","today","Date","getMinutes","getHours","getUTCDate","getUTCMonth","getUTCFullYear","handleSearch","result","json","response","fullWidth","currentTarget","onKeyDown","key","justifyItems","display","disabled","length","sx","m","pd","flexFlow","pt","ml","host_name","dateAdapter","AdapterDayjs","inputFormat","renderInput","params","rowSpacing","ampm","minutesStep","mr","party_size","e","target","Array","from","i","additionalFields","map","host_email","startIcon","pr","EmptyField","placeHolder","required","additional","saved","ConfigPage","fields","setFields","APIConfigPath","config","handleSaveConfigField","saveField","fieldsArray","splice","modifyField","fieldName","minWidth","align","border","handleEditFields","filter","colSpan","emailValidation","validateReservation","reservation","errors","trim","test","TODAY","MINUTE","HOUR","setHours","setMinutes","emptyNewReservation","ButtonContainer","CreateReservation","newReservation","setNewReservation","setErrors","isSubmitted","setIsSubmitted","setAdditionalFields","additionalFieldsArr","addtionalF","forEach","newField","push","handleChangeInput","isReservationValid","Object","values","addReservation","getAdditionalFieldValue","additionalField","f","Grid","LocalizationProvider","DesktopDatePicker","TextField","TimePicker","FormControl","InputLabel","Diversity3","Select","helperText","handleChangeAdditionalFields","lg","ReactDOM","StrictMode","document","getElementById","createContext"],"mappings":"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","file":"static/js/main.b9fc8abe.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n  Paper,\n  MenuList,\n  MenuItem,\n  ListItemText,\n  Button,\n  Popper,\n} from \"@mui/material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport styled from \"@emotion/styled\";\nimport { getLanguagesList } from \"../../services/languages\";\n\nconst MenuContainer = styled.div`\n  float: right;\n`;\n\nconst LanguageLabel = styled.label`\n  font-weight: 300;\n  font-size: smaller;\n`;\n\nconst UserMenu = () => {\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef<HTMLButtonElement>(null);\n  const user = useContext(AuthContext);\n  const languages = getLanguagesList();\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const handleLogout = () => {\n    user.onLogout();\n  };\n\n  return (\n    <MenuContainer>\n      <LanguageLabel>\n        {\n          languages.find((language) => language.localeFull === user.locale)\n            ?.name\n        }\n      </LanguageLabel>\n      <Button\n        ref={anchorRef}\n        id=\"composition-button\"\n        aria-controls={open ? \"composition-menu\" : undefined}\n        aria-expanded={open ? \"true\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n        style={{ marginLeft: \"1rem\" }}\n      >\n        <PersonIcon fontSize=\"small\" />\n        {user.username}\n      </Button>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        onResize={undefined}\n        onResizeCapture={undefined}\n      >\n        <Paper>\n          <MenuList>\n            <MenuItem>\n              <ListItemText onClick={handleLogout}>Logout</ListItemText>\n            </MenuItem>\n          </MenuList>\n        </Paper>\n      </Popper>\n    </MenuContainer>\n  );\n};\n\nexport default UserMenu;\n","// export const getLanguages = async (token) => {\n//   const response = await fetch(`${APIPath}`, {\n//     method: \"post\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       headers: { Authorization: token },\n//     },\n//   });\n//   const result = await response.json();\n//   console.log(\"__\", result);\n// };\n\nexport interface LangI{\n    id: string;\n    name: string;\n    localName: string;\n    locale: string;\n    localeFull: string;\n    isRtl: boolean;\n  }\n  \n  export const getLanguagesList = () => {\n    return [{ \"id\": 13, \"name\": \"Arabic\", \"localName\": \"العربية\", \"locale\": \"AR\", \"localeFull\": \"ar-AE\", \"isRtl\": true }, { \"id\": 3, \"name\": \"German\", \"localName\": \"Deutsch\", \"locale\": \"DE\", \"localeFull\": \"de-DE\", \"localeMoment\": \"de\", \"isRtl\": false }, { \"id\": 2, \"name\": \"English\", \"localName\": \"English\", \"locale\": \"en\", \"localeFull\": \"en-US\", \"isRtl\": false }, { \"id\": 41, \"name\": \"Spanish (Latin America)\", \"localName\": \"Español\", \"locale\": \"es\", \"localeFull\": \"es-LA\", \"localeMoment\": \"es\", \"isRtl\": false }, { \"id\": 7, \"name\": \"French\", \"localName\": \"Français\", \"locale\": \"FR\", \"localeFull\": \"fr-FR\", \"localeMoment\": \"fr\", \"isRtl\": false }, { \"id\": 17, \"name\": \"Italian\", \"localName\": \"Italiano\", \"locale\": \"IT\", \"localeFull\": \"it-IT\", \"localeMoment\": \"it\", \"isRtl\": false }, { \"id\": 44, \"name\": \"Japanese\", \"localName\": \"日本語\", \"locale\": \"JA\", \"localeFull\": \"ja-JP\", \"localeMoment\": \"ja\", \"isRtl\": false }, { \"id\": 43, \"name\": \"Korean\", \"localName\": \"한국어\", \"locale\": \"KO\", \"localeFull\": \"ko-KR\", \"localeMoment\": \"ko\", \"isRtl\": false }, { \"id\": 21, \"name\": \"Portuguese (Brasil)\", \"localName\": \"Português\", \"locale\": \"PT\", \"localeFull\": \"pt-BR\", \"localeMoment\": \"pt-br\", \"isRtl\": false }, { \"id\": 9, \"name\": \"Russian\", \"localName\": \"Русский\", \"locale\": \"RU\", \"localeFull\": \"ru-RU\", \"localeMoment\": \"ru\", \"isRtl\": false }, { \"id\": 25, \"name\": \"Swedish\", \"localName\": \"Svenska\", \"locale\": \"SV\", \"localeFull\": \"sv-SE\", \"localeMoment\": \"sv\", \"isRtl\": false }, { \"id\": 16, \"name\": \"Turkish\", \"localName\": \"Türkçe\", \"locale\": \"TR\", \"localeFull\": \"tr-TR\", \"localeMoment\": \"tr\", \"isRtl\": false }, { \"id\": 35, \"name\": \"Chinese (Simplified)\", \"localName\": \"简体中文\", \"locale\": \"zh\", \"localeFull\": \"zh-Hans\", \"localeMoment\": \"zh-cn\", \"isRtl\": false }, { \"id\": 34, \"name\": \"Chinese (Traditional)\", \"localName\": \"繁體中文\", \"locale\": \"zh\", \"localeFull\": \"zh-TW\", \"localeMoment\": \"zh-tw\", \"isRtl\": false }]\n  }","import { TabPanelProps } from \"../../pages/home/Home.types\";\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <div>{children}</div>}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import React, { useEffect, useState } from \"react\";\nimport oauthService from \"./services/oauth\";\nimport { useAuth, AuthProvider } from \"react-oauth2-pkce\";\nimport {\n  AlertContext,\n  defaultAlertContextValue,\n} from \"./contexts/AlertContext\";\nimport { Backdrop, CircularProgress } from \"@mui/material\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { AlertI, AuthI } from \"./pages/home/Home.types\";\nimport HomePage from \"./pages/home/Home\";\nimport ConfigPage from \"./pages/config/Config\";\nimport { AuthContext, defaultAuthContext } from \"./contexts/AuthContext\";\n\nconst AppWithOauth: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [auth, setAuth] = useState<AuthI>(defaultAuthContext);\n  const { authService } = useAuth();\n  const authEnabled = process?.env.REACT_APP_OAUTH_ACTIVE;\n\n  useEffect(() => {\n    if (!authEnabled) {\n      return;\n    }\n    if (\n      !authService.isAuthenticated() &&\n      !authService.getCodeFromLocation(window.location)\n    ) {\n      setIsLoading(true);\n      authService.authorize();\n    } else {\n      const { token, username, locale } =\n        authService.getAuthTokens() as unknown as AuthI;\n      setAuth({\n        token,\n        username,\n        locale,\n        onLogout: () => {\n          localStorage.clear();\n          authService.logout();\n        },\n      });\n      setIsLoading(false);\n    }\n  }, [authService, authEnabled]);\n\n  return (\n    <>\n      {(!authEnabled || authService.isAuthenticated()) && (\n        <AuthContext.Provider value={auth}>\n          <BrowserRouter>\n            <Routes>\n              <Route path=\"/\">\n                <Route index element={<HomePage />} />\n                <Route path=\"config\" element={<ConfigPage />} />\n              </Route>\n            </Routes>\n          </BrowserRouter>\n        </AuthContext.Provider>\n      )}\n      {isLoading && (\n        <Backdrop open={true} style={{ zIndex: 1 }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nconst App: React.FC = () => {\n  const [alert, setAlert] = useState<AlertI>(defaultAlertContextValue);\n\n  const updateAlertContext = (newChanges: AlertI) => {\n    setAlert({ ...alert, ...newChanges });\n  };\n\n  return (\n    <AlertContext.Provider value={{ ...alert, updateAlertContext }}>\n      <AuthProvider authService={oauthService}>\n        <AppWithOauth />\n      </AuthProvider>\n    </AlertContext.Provider>\n  );\n};\n\nexport default App;\n","//SETTING UP OAUTH SERVICE WITH OUR APP\n\nimport { AuthService } from \"react-oauth2-pkce\";\n\nconst oauthService = new AuthService({\n  clientId: process.env.REACT_APP_CLIENT_ID || \"\",\n  provider: process.env.REACT_APP_PROVIDER || \"\",\n  redirectUri: process.env.REACT_APP_REDIRECT_URI || \"\",\n  scopes: [\"conversations\"],\n  location: window.location,\n});\n\nexport default oauthService;\n","import React, { useContext } from \"react\";\nimport Reservations from \"../../components/reservations/Reservations\";\nimport {\n  Alert,\n  Tab,\n  Tabs,\n  Container,\n  useTheme,\n  IconButton,\n  Typography,\n  Backdrop,\n  Grid,\n} from \"@mui/material\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport CreateReservation from \"../../components/createReservation/CreateReservation\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CircularProgress } from \"@mui/material\";\nimport TabPanel from \"../../components/tabPanel/TabPanel\";\nimport { AlertContext } from \"../../contexts/AlertContext\";\nimport UserMenu from \"../../components/userMenu/UserMenu\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nconst HomePage: React.FC = () => {\n  const theme = useTheme();\n  const [currentTab, setCurrentTab] = React.useState(0);\n  const authEnabled = process?.env.REACT_APP_OAUTH_ACTIVE;\n  const user = useContext(AuthContext);\n  const alert = useContext(AlertContext);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setCurrentTab(index);\n  };\n\n  return (\n    <Container fixed>\n      <Grid container spacing={2} justifyContent=\"center\">\n        <br />\n        <Grid item xs={11} md={10}>\n          <Typography variant=\"h4\" component=\"h4\">\n            Awesome Restaurant\n            {authEnabled && user?.username && <UserMenu />}\n          </Typography>\n        </Grid>\n\n        <br />\n        <Grid item xs={12} md={10}>\n          <Backdrop open={!!alert.isLoading} style={{ zIndex: 1 }}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          {alert.isVisible && (\n            <>\n              <Alert\n                severity={alert.type}\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      alert.updateAlertContext({ isVisible: false });\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n              >\n                {alert.message}\n              </Alert>\n              <br />\n            </>\n          )}\n\n          <Tabs\n            value={currentTab}\n            onChange={handleChange}\n            aria-label=\"Reservations\"\n          >\n            <Tab value={0} label=\"Manage reservations\" wrapped />\n            <Tab value={1} label=\"Create Reservation\" />\n          </Tabs>\n\n          <SwipeableViews\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n            index={currentTab}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabPanel value={currentTab} index={0} dir={theme.direction}>\n              <br />\n              <Reservations />\n            </TabPanel>\n\n            <TabPanel value={currentTab} index={1} dir={theme.direction}>\n              <CreateReservation />\n            </TabPanel>\n          </SwipeableViews>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import * as React from \"react\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport { ReservationI } from \"../../pages/home/Home.types\";\nimport { useContext, useState } from \"react\";\nimport { APIPath } from \"../../const\";\n\nimport styled from \"@emotion/styled\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport {\n  CalendarMonth,\n  Dining,\n  Diversity3,\n  Groups2,\n  LocalDining,\n  QueryBuilder,\n} from \"@mui/icons-material\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DesktopDatePicker, TimePicker } from \"@mui/x-date-pickers\";\nimport { AlertContext } from \"../../contexts/AlertContext\";\n\nconst FieldContainer = styled.div`\n  & > div {\n    width: 100%;\n  }\n`;\n\nconst Reservations = () => {\n  const [reservationSelected, setReservationSelected] = useState<\n    ReservationI | undefined\n  >();\n  const [editing, setEditing] = useState<boolean>(false);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [date, setDate] = useState<Date | null>();\n  const [startTime, setStartTime] = useState<Date | null>();\n  const alert = useContext(AlertContext);\n\n  const handleOpenEdit = () => {\n    setEditing(true);\n  };\n\n  const handleSave = async () => {\n    if (reservationSelected) {\n      await fetch(`${APIPath}/${reservationSelected.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        body: JSON.stringify(reservationSelected),\n      }).catch((error) => {\n        alert.updateAlertContext({\n          type: \"error\",\n          message: error,\n          isVisible: true,\n          isLoading: false,\n        });\n      });\n      alert.updateAlertContext({\n        type: \"success\",\n        message: \"Your reservation has been updated succesfully!\",\n        isVisible: true,\n        isLoading: false,\n      });\n      setEditing(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (reservationSelected) {\n      setEditing(false);\n      await fetch(`${APIPath}/${reservationSelected.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\n        body: JSON.stringify(reservationSelected),\n      }).then(() => {\n        alert.updateAlertContext({\n          type: \"success\",\n          message: \"Your reservation has been deleted succesfully!\",\n          isVisible: true,\n          isLoading: false,\n        });\n        setEditing(false);\n        setSearchValue(\"\");\n        setReservationSelected(undefined);\n      });\n    }\n  };\n\n  const handleCloseEdit = () => {\n    setEditing(false);\n    (async () => {\n      const result = await fetch(\n        `${APIPath}/${reservationSelected?.host_email}`\n      );\n      const response = await result.json();\n      if (response && response.id) {\n        setReservationSelected(response);\n        setDate(new Date(response.date ? response.date : \"\"));\n        setStartTime(\n          new Date(response.hour ? `${response.date} ${response.hour}` : \"\")\n        );\n      }\n    })();\n  };\n\n  const handleChangeInput = (\n    e:\n      | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      | SelectChangeEvent\n  ) => {\n    setReservationSelected({\n      ...reservationSelected,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleChange = (newValue: Date | null | undefined, field: string) => {\n    let today = new Date(newValue ? newValue : \"\");\n    let value, minute, hour, day, month, year;\n    minute = today.getMinutes();\n    hour = today.getHours();\n    day = today.getUTCDate();\n    month = today.getUTCMonth() + 1;\n    year = today.getUTCFullYear();\n    switch (field) {\n      case \"date\":\n        if (newValue) {\n          value = `${month}/${day}/${year}`;\n          setDate(newValue);\n        }\n        break;\n      case \"hour\":\n        value = `${hour}:${minute && minute < 10 ? `0${minute}` : minute}`;\n        setStartTime(newValue);\n        break;\n    }\n    setReservationSelected({ ...reservationSelected, [field]: value });\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.currentTarget.value);\n  };\n\n  const handleSearch = () => {\n    (async () => {\n      const result = await fetch(`${APIPath}/${searchValue}`);\n      const response = await result.json();\n\n      if (response && response.id) {\n        setReservationSelected(response);\n        setDate(new Date(response.date ? response.date : \"\"));\n        setStartTime(\n          new Date(response.hour ? `${response.date} ${response.hour}` : \"\")\n        );\n        alert.updateAlertContext({\n          isVisible: true,\n          type: \"success\",\n          isLoading: false,\n          message: \"\",\n        });\n      } else {\n        setReservationSelected(undefined);\n        alert.updateAlertContext({\n          type: \"error\",\n          message: response.error,\n          isVisible: true,\n          isLoading: false,\n        });\n      }\n    })();\n  };\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={10} md={11}>\n          <TextField\n            fullWidth\n            type=\"search\"\n            onChange={handleInputChange}\n            label=\"Enter your email\"\n            onKeyDown={handleKeyDown}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={2}\n          md={1}\n          justifyContent=\"center\"\n          justifyItems=\"center\"\n          display=\"flex\"\n        >\n          <Button disabled={!searchValue.length} onClick={handleSearch}>\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n      <br />\n      {reservationSelected && (\n        <Card variant=\"outlined\">\n          <Box sx={{ m: 2, pd: 2 }}>\n            <CardContent>\n              <Restaurant />\n              <Box sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                <Typography sx={{ fontSize: 20 }} variant=\"h5\">\n                  Reservation to:\n                </Typography>\n                <Typography sx={{ fontSize: 20, ml: 1 }} color=\"text.secondary\">\n                  {reservationSelected.host_name}\n                </Typography>\n              </Box>\n              <Box sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                {editing ? (\n                  <>\n                    <Grid item xs={6} md={6}>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <FieldContainer>\n                          <DesktopDatePicker\n                            data-test-id=\"date\"\n                            label=\"Date\"\n                            inputFormat=\"MM/DD/YYYY\"\n                            value={date}\n                            onChange={(value) => handleChange(value, \"date\")}\n                            renderInput={(params) => <TextField {...params} />}\n                          />\n                        </FieldContainer>\n                      </LocalizationProvider>\n                    </Grid>\n\n                    <Grid item xs={6} md={6}>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <Grid container spacing={2} rowSpacing=\"1rem\">\n                          <Grid item xs={12}>\n                            <FieldContainer>\n                              <TimePicker\n                                data-test-id=\"hour\"\n                                ampm={false}\n                                label=\"Hour\"\n                                value={startTime}\n                                onChange={(value) =>\n                                  handleChange(value, \"hour\")\n                                }\n                                renderInput={(params) => (\n                                  <TextField {...params} />\n                                )}\n                                minutesStep={30}\n                              />\n                            </FieldContainer>\n                          </Grid>\n                        </Grid>\n                      </LocalizationProvider>\n                    </Grid>\n                  </>\n                ) : (\n                  <>\n                    <Typography sx={{ fontSize: 20, mr: 1 }} variant=\"h5\">\n                      <CalendarMonth />\n                    </Typography>\n                    <Typography sx={{ fontSize: 20 }} color=\"text.secondary\">\n                      {reservationSelected.date}\n                    </Typography>\n                    <Typography sx={{ fontSize: 20, ml: 3 }} variant=\"h5\">\n                      <QueryBuilder />\n                    </Typography>\n                    <Typography\n                      sx={{ fontSize: 20, ml: 1 }}\n                      color=\"text.secondary\"\n                    >\n                      {reservationSelected.hour}\n                    </Typography>\n                  </>\n                )}\n              </Box>\n              <Box sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                {editing ? (\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      <Diversity3 />\n                    </InputLabel>\n                    <Select\n                      name=\"party_size\"\n                      value={reservationSelected.party_size}\n                      label=\"size\"\n                      onChange={handleChangeInput}\n                    >\n                      {Array.from(Array(22), (e, i) => {\n                        return (\n                          i > 0 && (\n                            <MenuItem key={i} value={i}>{`${i < 21 ? i : \" \"} ${\n                              i === 1\n                                ? \"person\"\n                                : i < 21\n                                ? \"people\"\n                                : \"Larger party\"\n                            }`}</MenuItem>\n                          )\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                ) : (\n                  <>\n                    <Typography sx={{ fontSize: 20, pt: 0.3 }} variant=\"h5\">\n                      <Groups2 />\n                    </Typography>\n                    <Typography\n                      sx={{ fontSize: 20, ml: 1 }}\n                      color=\"text.secondary\"\n                    >\n                      {reservationSelected.party_size}\n                    </Typography>\n                  </>\n                )}\n              </Box>\n                {reservationSelected.additionalFields && reservationSelected.additionalFields.map(field => <Box key={field.name} sx={{ display: \"flex\", flexFlow: \"row\", pt: 2 }}>\n                  <Typography sx={{ fontSize: 20 }} variant=\"h5\">\n                    {field.name}:\n                  </Typography>\n                  <Typography sx={{ fontSize: 20, ml: 1 }} color=\"text.secondary\">\n                    {field.value}\n                  </Typography>\n                    </Box>\n                )}\n            </CardContent>\n            <CardActions sx={{ display: \"flex\", flexFlow: \"row-reverse\" }}>\n              <Button\n                size=\"small\"\n                onClick={editing ? handleCloseEdit : handleDelete}\n                startIcon={<LocalDining />}\n              >\n                {editing ? \"Cancel\" : \"Delete\"}\n              </Button>\n              <Button\n                size=\"small\"\n                sx={{ pr: 5 }}\n                onClick={editing ? handleSave : handleOpenEdit}\n                startIcon={<Dining />}\n              >\n                {editing ? \"Save\" : \"Edit\"}\n              </Button>\n            </CardActions>\n          </Box>\n        </Card>\n      )}\n    </>\n  );\n};\nexport default Reservations;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {FieldI} from \"./ConfigTypes\";\nimport {\n    Container,\n    Grid, Paper,\n    Table, TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow, TextField,\n    Typography\n} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SaveIcon from '@mui/icons-material/Save';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {APIConfigPath} from \"../../const\";\nimport UserMenu from '../../components/userMenu/UserMenu';\nimport { AuthContext } from '../../contexts/AuthContext';\n\nconst EmptyField = {\n    name: '',\n    placeHolder: '',\n    disabled: \"false\",\n    required: \"false\",\n    additional: \"true\",\n    saved:\"true\"\n};\n\nconst  ConfigPage: React.FC = () => {\n    const authEnabled = process?.env.REACT_APP_OAUTH_ACTIVE;\n    const user = useContext(AuthContext);\n    const [fields, setFields] = useState<FieldI[]>([]);\n\n    useEffect(()=> {\n        (async () => {\n          const response = await fetch(`${APIConfigPath}`, {});\n             const result = await response.json();\n            result.config && setFields(result.config.fields);\n        })();\n    },[]);\n\n    const handleSaveConfigField = async (field:FieldI, index: number) => {\n        const saveField = {...field,  disabled: \"true\"};\n        const fieldsArray  = [...fields];\n        fieldsArray.splice(index, 1, saveField);\n        setFields(fieldsArray);\n        (await fetch(`${APIConfigPath}`, {\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(fieldsArray),\n        }));\n    }\n\n    const handleAddField = ()=>{\n        setFields([...fields, EmptyField])\n    }\n\n    const handleDeleteField = (fieldName:FieldI) => async () => {\n        (await fetch(`${APIConfigPath}/additionalFields`, {\n                method: \"post\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(fieldName),\n            }));\n        const fieldsArray =  [...fields];\n        setFields(fieldsArray.filter(e =>  e.name !== fieldName.name));\n    }\n\n    const modifyField = (field:FieldI, fieldName:string, value:string, index:number) => {\n        const fieldsArray  = [...fields];\n        fieldsArray.splice(index, 1, {...field, [fieldName]: value});\n        setFields(fieldsArray);\n    }\n\n    const handleEditFields = (field:FieldI, index:number) => {\n        const fieldsArray  = [...fields];\n        fieldsArray.splice(index, 1, {...field, disabled: \"false\"});\n        setFields(fieldsArray);\n    }\n\n    return(<Container fixed>\n        <Grid container spacing={2} justifyContent=\"center\">\n            <br />\n            <Grid item xs={12} md={10}>\n                <Typography variant=\"h4\" component=\"h4\">\n                    Configuration Page\n                    {authEnabled && user?.username && <UserMenu />}\n                </Typography>\n                <br />\n                <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell align=\"right\">Place Holder</TableCell>\n                                <TableCell align=\"right\">Actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {fields.map((field,index) => (\n                                <TableRow\n                                key={index}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                            <TableCell align=\"right\">\n                                <TextField\n                                    fullWidth\n                                    disabled={field.disabled===\"true\"}\n                                    onChange={e => modifyField(field, 'name',e.target.value, index)}\n                                    value={field.name}\n                                />\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <TextField\n                                fullWidth\n                                disabled={field.disabled===\"true\"}\n                                onChange={e => modifyField(field, 'placeHolder',e.target.value, index)}\n                                value={field.placeHolder}\n                            />\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <SaveIcon onClick={() => handleSaveConfigField(field, index)} color={(field.saved===\"false\" && field.disabled ===\"true\") || (field.saved===\"true\" && field.disabled ===\"true\")? \"disabled\":\"primary\"}/>\n                                <EditIcon onClick={() => handleEditFields(field, index)} color={field.saved===\"true\"? \"secondary\":\"disabled\"}/>\n                                    <DeleteIcon onClick={handleDeleteField(field)} color={field.saved===\"false\" && field.disabled ===\"true\"? \"disabled\":\"error\"} />\n                                </TableCell>\n                            </TableRow>\n                            ))}\n                            <TableRow  >\n                                <TableCell colSpan={3} align={'center'}>\n                                    <AddCircleOutlineIcon onClick={handleAddField} color=\"primary\" />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Grid>\n    </Container>);\n}\n\nexport default ConfigPage;\n","import { ErrorI, ReservationI } from \"../../pages/home/Home.types\";\n\nconst emailValidation =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const validateReservation = (reservation: ReservationI): ErrorI => {\n  const errors: ErrorI = {};\n  if (!reservation.host_name?.trim()) {\n    errors.host_name = \"Please enter a host name\";\n  }\n  if (!reservation.host_email?.trim()) {\n    errors.host_email = \"Please enter an email\";\n  } else {\n    if (!emailValidation.test(reservation.host_email)) {\n      errors.host_email = \"Please enter a valid email\";\n    }\n  }\n  return errors;\n};\n","import * as React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { ErrorI, ReservationI } from \"../../pages/home/Home.types\";\nimport {APIConfigPath, APIPath} from \"../../const\";\nimport { Grid } from \"@mui/material\";\nimport styled from \"@emotion/styled\";\n\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DesktopDatePicker, TimePicker } from \"@mui/x-date-pickers\";\nimport { Diversity3 } from \"@mui/icons-material\";\nimport { validateReservation } from \"../../utlis/validations/validateReservation\";\nimport { AlertContext } from \"../../contexts/AlertContext\";\nimport {FieldI} from \"../../pages/config/ConfigTypes\";\nimport {Field} from \"./CreateReservationTypes\";\n\nconst TODAY = new Date();\nlet MINUTE = TODAY.getMinutes();\nlet HOUR = TODAY.getHours();\nconst setTime = () => {\n  if (MINUTE > 30) {\n    MINUTE = 30;\n  } else {\n    MINUTE = 0;\n    HOUR += 1;\n  }\n  TODAY.setHours(HOUR);\n  TODAY.setMinutes(MINUTE);\n};\nsetTime();\nconst emptyNewReservation = {\n  host_email: \"\",\n  host_name: \"\",\n  hour: `${HOUR}:${MINUTE < 10 ? `0${MINUTE}` : MINUTE}`,\n  date: `${\n    TODAY.getUTCMonth() + 1\n  }/${TODAY.getUTCDate()}/${TODAY.getUTCFullYear()}`,\n  party_size: \"2\",\n  additionalFields: [],\n};\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  & > button {\n    width: 100%;\n  }\n`;\n\nconst FieldContainer = styled.div`\n  & > div {\n    width: 100%;\n  }\n`;\n\nconst CreateReservation = () => {\n  const [newReservation, setNewReservation] =\n    useState<ReservationI>(emptyNewReservation);\n  const [errors, setErrors] = useState<ErrorI>({});\n  const [date, setDate] = useState<Date | null>(new Date());\n  const [startTime, setStartTime] = useState<Date | null>(TODAY);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [additionalFields, setAdditionalFields] = useState<FieldI[]>([]);\n  const { updateAlertContext, isLoading } = React.useContext(AlertContext);\n\n  useEffect(()=> {\n    (async () => {\n      const response = await fetch(`${APIConfigPath}/additionalFields`, {});\n      const result = await response.json();\n      let additionalFieldsArr:Field[] = [];\n      const addtionalF:FieldI[] = result.config.length ? result.config : [];\n      setAdditionalFields(result.config);\n      addtionalF.forEach(field => {\n        const newField = {name: field.name, value: ''}\n        additionalFieldsArr.push(newField);\n      })\n      setNewReservation({...newReservation, additionalFields: [...additionalFieldsArr] });\n    })();\n  },[newReservation]);\n\n  const handleChange = (newValue: Date | null, field: string) => {\n    let today = new Date(newValue ? newValue : \"\");\n    let value, minute, hour, day, month, year;\n    minute = today.getMinutes();\n    hour = today.getHours();\n    day = today.getUTCDate();\n    month = today.getUTCMonth() + 1;\n    year = today.getUTCFullYear();\n    switch (field) {\n      case \"date\":\n        if (newValue) {\n          value = `${month}/${day}/${year}`;\n          setDate(newValue);\n        }\n        break;\n      case \"hour\":\n        value = `${hour}:${minute < 10 ? `0${minute}` : minute}`;\n        setStartTime(newValue);\n        break;\n    }\n    setNewReservation({ ...newReservation, [field]: value });\n  };\n\n  const handleChangeInput = (\n    e:\n      | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      | SelectChangeEvent\n  ) => {\n    setNewReservation({ ...newReservation, [e.target.name]: e.target.value });\n    const errors = validateReservation(newReservation);\n    if (isReservationValid(errors)) {\n      updateAlertContext({\n        isVisible: false,\n        message: \"\",\n        isLoading: false,\n        type: \"success\",\n      });\n    }\n    setErrors(errors);\n  };\n\n  const handleChangeAdditionalFields = (fieldName:string,value:string, index:number)=>{\n    const additionalField:Field = {name: fieldName, value: value};\n    let additionalFieldsArr:Field[];\n    if (newReservation.additionalFields){\n      additionalFieldsArr = [...newReservation.additionalFields]\n    }else{\n      additionalFieldsArr = []\n    }\n    additionalFieldsArr[index] = additionalField;\n    setNewReservation({...newReservation, additionalFields: [...additionalFieldsArr]});\n  }\n\n  const isReservationValid = (errors: ErrorI) => {\n    return !Object.values(errors).length;\n  };\n\n  const addReservation = async () => {\n    const errors = validateReservation(newReservation);\n    setIsSubmitted(true);\n    setErrors({ ...errors });\n\n    if (isReservationValid(errors)) {\n      updateAlertContext({ isLoading: true });\n      const response = (await fetch(`${APIPath}`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newReservation),\n      })) as any;\n      const result = await response.json();\n      if (result[\"id\"]) {\n        updateAlertContext({\n          type: \"success\",\n          message: \"Your reservation successfully created!\",\n          isVisible: true,\n          isLoading: false,\n        });\n        setNewReservation({ ...emptyNewReservation });\n      } else {\n        updateAlertContext({\n          message: result[\"error\"],\n          type: \"error\",\n          isVisible: true,\n          isLoading: false,\n        });\n      }\n    } else {\n      updateAlertContext({\n        type: \"error\",\n        message: \"Please fill required fields\",\n        isVisible: true,\n        isLoading: false,\n      });\n    }\n  };\n\n  const getAdditionalFieldValue = (fieldName:string) => {\n    let value = ''\n    if (newReservation.additionalFields) {\n      const additionalField = newReservation.additionalFields.find((f) => f.name === fieldName);\n      if (additionalField){\n        value = additionalField.value;\n      }\n    }\n    return value;\n  }\n\n  return (\n    <>\n      <br />\n      <Grid container spacing={2} rowSpacing=\"1rem\">\n        <Grid item xs={6} md={6}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <FieldContainer>\n              <DesktopDatePicker\n                data-test-id=\"date\"\n                label=\"Date\"\n                inputFormat=\"MM/DD/YYYY\"\n                value={date}\n                onChange={(value) => handleChange(value, \"date\")}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </FieldContainer>\n          </LocalizationProvider>\n        </Grid>\n\n        <Grid item xs={6} md={6}>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <Grid container spacing={2} rowSpacing=\"1rem\">\n              <Grid item xs={12}>\n                <FieldContainer>\n                  <TimePicker\n                    data-test-id=\"hour\"\n                    ampm={false}\n                    label=\"Hour\"\n                    value={startTime}\n                    onChange={(value) => handleChange(value, \"hour\")}\n                    renderInput={(params) => <TextField {...params} />}\n                    minutesStep={30}\n                  />\n                </FieldContainer>\n              </Grid>\n            </Grid>\n          </LocalizationProvider>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">\n              <Diversity3 />\n            </InputLabel>\n            <Select\n              name=\"party_size\"\n              value={newReservation.party_size}\n              label=\"size\"\n              onChange={handleChangeInput}\n            >\n              {Array.from(Array(22), (e, i) => {\n                return (\n                  i > 0 && (\n                    <MenuItem key={i} value={i}>{`${i < 21 ? i : \" \"} ${\n                      i === 1 ? \"person\" : i < 21 ? \"people\" : \"Larger party\"\n                    }`}</MenuItem>\n                  )\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            error={!!errors.host_name && isSubmitted}\n            name=\"host_name\"\n            label=\"Host Name\"\n            value={newReservation.host_name}\n            onChange={handleChangeInput}\n            helperText={isSubmitted ? errors.host_name : \"\"}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            error={!!errors.host_email && isSubmitted}\n            name=\"host_email\"\n            label=\"Host Email\"\n            value={newReservation.host_email}\n            onChange={handleChangeInput}\n            helperText={isSubmitted ? errors.host_email : \"\"}\n          />\n        </Grid>\n        {additionalFields && additionalFields.map((additionalField, index) =>\n            <Grid key={index} item xs={12}>\n            <TextField\n                fullWidth\n                key={additionalField.name}\n                error={false}\n                name={additionalField.name}\n                label={additionalField.placeHolder}\n                value={getAdditionalFieldValue(additionalField.name)}\n                onChange={e => handleChangeAdditionalFields(additionalField.name,e.target.value,index)}\n            />\n          </Grid>\n        )}\n        <Grid item xs={12} md={12} lg={12}>\n          <ButtonContainer>\n            <Button\n              size={\"large\"}\n              onClick={addReservation}\n              variant=\"contained\"\n              disabled={\n                isLoading || (isSubmitted && !isReservationValid(errors))\n              }\n            >\n              Create\n            </Button>\n          </ButtonContainer>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateReservation;\n","import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const APIPath = \"exchange/restaurant/reservations\";\nexport const APIConfigPath = \"exchange/restaurant/config\";\n","import React from \"react\";\nimport { AlertI } from \"../pages/home/Home.types\";\n\nexport const defaultAlertContextValue: AlertI = {\n  isLoading: false,\n  isVisible: false,\n  type: \"success\",\n  message: \"Reservation successfully updated\",\n};\n\nexport const AlertContext = React.createContext<any>({\n  ...defaultAlertContextValue,\n});\n","import React from \"react\";\nimport { AuthI } from \"../pages/home/Home.types\";\n\nexport const defaultAuthContext: AuthI = {\n  token: '',\n  locale: '',\n  username: '',\n  onLogout: () => {}\n};\n\nexport const AuthContext = React.createContext<any>({\n  ...defaultAuthContext,\n});\n"],"sourceRoot":""}